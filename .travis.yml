language: python

python:
    - 3.3
    - 3.5

services: 
    - mysql
    - postgresql

env:
    - DJANGO=1.8.4 DB=mysql
    - DJANGO=1.8.4 DB=postgresql
    - DJANGO=1.9 DB=postgresql
    - DJANGO=1.9 DB=mysql

# exclude Python 3.3 and Django >= 1.9, python = 3.3 it's not supported on Django >= 1.9
matrix:
    exclude:
        - python: 3.3
          env: DJANGO=1.9 DB=mysql
        - python: 3.3
          env: DJANGO=1.9 DB=postgresql
      
before_install:
    - export DJANGO_SETTINGS_MODULE=siaad.settings
    - export PIP_USE_MIRRORS=true

install:
    - pip install -r requirements.txt
    - pip install django==$DJANGO --quiet

before_script:
    - sh -c "if [ '$DB' = 'postgresql' ]; then psql -c 'DROP DATABASE IF EXISTS travis_ci_test;' -U postgres; fi"
    - sh -c "if [ '$DB' = 'mysql' ]; then mysql -e 'DROP DATABASE IF EXISTS travis_ci_test;' -uroot; fi"
    - sh -c "if [ '$DB' = 'postgresql' ]; then psql -c 'create database travis_ci_test;' -U postgres; fi"
    - sh -c "if [ '$DB' = 'mysql' ]; then mysql -e 'create database travis_ci_test;' -uroot; fi"

script:
    - python manage.py makemigrations --noinput
    - python manage.py migrate --noinput

notifications:
    email:
        on_success: never # default: change
        on_failure: always
